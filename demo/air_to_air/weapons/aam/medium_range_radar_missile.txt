# ****************************************************************************
# CUI//REL TO USA ONLY
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

/*
#Classification: UNCLASSIFIED//FOUO

   Snyder: -started w/ the medium_range_radar_missile.txt from the demos/brawler directory released w/ AFSIM
           -replaced the straight line mover w/ the SRM guided mover (also from the brawler demo),
            & tweaked the mover parameters to create ~50 nmi missile to use as an MRM
*/


##############################################################################
### signatures
##############################################################################
infrared_signature SIMPLE_INFRARED_SIGNATURE
   constant 1 watts/steradian
end_infrared_signature
optical_signature  SIMPLE_OPTICAL_SIGNATURE
   constant 1 m^2
end_optical_signature
radar_signature    SIMPLE_RADAR_SIGNATURE
   constant 1 m^2
end_radar_signature
weapon_effects SIMPLE_EFFECT WSF_GRADUATED_LETHALITY
   radius_and_pk  20.0 m  0.5
end_weapon_effects


##############################################################################
### antenna patterns
##############################################################################
antenna_pattern SEEKER_ANTENNA
  circular_pattern
    beamwidth             6.0 deg
    peak_gain            30.0 dB
    minimum_gain        -10.0 dB
  end_circular_pattern
end_antenna_pattern
antenna_pattern RADAR_ANTENNA
  circular_pattern
    beamwidth             3.0 deg
    peak_gain            30.0 dB
    minimum_gain        -10.0 dB
  end_circular_pattern
end_antenna_pattern


##############################################################################
###  normal radar sensor;  weapon's radar seeker
##############################################################################
sensor RADAR_SEEKER WSF_RADAR_SENSOR
   off
   ignore_domain                  land
   ignore_domain                  subsurface
   selection_mode                 single        #multiple
   initial_mode                   SEARCH
   slew_mode                      azimuth_and_elevation
   azimuth_slew_limits            -45 deg 45 deg
   elevation_slew_limits          -45 deg 45 deg
   mode_template
      scan_mode                   azimuth_and_elevation
      azimuth_scan_limits         -90 deg 90 deg
      elevation_scan_limits       -90 deg 90 deg      
      frame_time                  1.0 sec
      transmitter
         antenna_pattern          SEEKER_ANTENNA
         power                       1.0 kW
         frequency                  10.0 GHz
         pulse_repetition_interval   3.3 usec    #HPRF 300 kHz
         pulse_width                 1.0 usec    #30% duty factor
      end_transmitter
      receiver
         bandwidth                  1 MHz
      end_receiver
      one_m2_detect_range         50.0 km
      hits_to_establish_track        1 2
      hits_to_maintain_track         1 3
      reports_location
      reports_velocity
      reports_iff
      track_quality                  1.0
   end_mode_template
   mode SEARCH
      frame_time                  0.1 sec
   end_mode
end_sensor

aero MRM_AERO WSF_AERO
   // NAS - made up some values
   mach_and_cd    0.0 .15 
   mach_and_cd    0.8 .2 
   mach_and_cd    1.0 .27
   mach_and_cd    1.2 .25  
   mach_and_cd    1.5 .23  

   reference_area 49 in2 # Generic medium-range missile 7.0 in body dia U//FOUO

   cl_max 10.0 # Experimentally set, to cause approx 30G max turn rate

   # Note:  Pi * AR * e = 50 => AR = 50 / Pi / e = 17.7 # ref Steve Knapp
   aspect_ratio   17.7
   oswalds_factor  0.9 # Approximate Guess

end_aero

##############################################################################
### weapon platform that requires an uplink, and will go active
##############################################################################
platform_type MEDIUM_RANGE_RADAR_MISSILE WSF_PLATFORM
   category missile
   category MISSILE

   script_variables
      bool mDrawTarget = false;
      WsfDraw draw = WsfDraw();
   end_script_variables

   execute at_interval_of 1 sec
      if (mDrawTarget)
      {
         WsfTrack tgt = PLATFORM.CurrentTargetTrack();
         if (tgt.IsValid())
         {
            draw.SetDuration(1.0);  //same as execute interval
            draw.SetColor(1, 0, 1); //purple
            draw.SetLineSize(2);    //double thick
            draw.BeginLines();
               draw.Vertex(PLATFORM.Location());
               draw.Vertex(tgt.CurrentLocation());
            draw.End();
         }
      }
   end_execute

   weapon_effects SIMPLE_EFFECT
   icon aim120
   infrared_signature SIMPLE_INFRARED_SIGNATURE
   optical_signature  SIMPLE_OPTICAL_SIGNATURE
   radar_signature    SIMPLE_RADAR_SIGNATURE


   mover WSF_GUIDED_MOVER
    total_mass       350.0 lbm #ref - Weapons File 14th edition U//FOUO
    fuel_mass         157.0 lbm # derived from thrust and specific impulse
    # Isp values of 250 are typical of solid rocket motors of
    # today, but that value would not close, so was reduced.
    specific_impulse 222.0 sec # guess, taken from SRM model
    thrust          5800.0 lbf # guess
    thrust_duration    6.0 sec // guess
    update_interval 0.10 s
    aero MRM_AERO
    #show_status # Turns on some mass properties diagnostic output
  end_mover

# NAS - made up some values
  processor mrm_autopilot WSF_GUIDANCE_COMPUTER
     phase LAUNCH
         g_bias                         5.0
         maximum_commanded_g           40.0 g
#         update_interval                0.1 s
        next_phase TERMINAL when phase_time > 5 seconds
     end_phase
     phase TERMINAL
         proportional_navigation_gain  5.0
         velocity_pursuit_gain         5.0
         g_bias                        1.0
     end_phase 
  end_processor

   ###########################################################################
   ### simple fuse
   ###########################################################################
   processor fuse WSF_AIR_TARGET_FUSE
      max_time_of_flight_to_detonate  120.0 sec
   end_processor

   ###########################################################################
   ### perfect trackers provide target truth data for the missile
   ###   no uplink or tracking required for this missile
   ###########################################################################
   #processor seeker WSF_PERFECT_TRACKER
   #   update_interval  0.5 s
   #end_processor

   ###########################################################################
   ### imperfect radar provide target data for the missile
   ###########################################################################
   sensor seeker RADAR_SEEKER
      off
      internal_link track_mgr
      internal_link weapon_manager
   end_sensor

   ###########################################################################
   ### simple track manager.  make sure comm & sensor feed it
   ###########################################################################
   processor track_mgr WSF_TRACK_PROCESSOR
      master_track_processor
   end_processor

   ###########################################################################
   ### turns on the weapon radar at the right time
   ###########################################################################
   processor weapon_manager WSF_WEAPON_TRACK_PROCESSOR
      turn_on_sensor seeker  at_time   20 s before_intercept
     #turn_on_sensor seeker at_range 3500 m before_intercept
      coast_time      100 s
      uplink_required false         #this version is active missile only (no no command guidance uplink)
   end_processor

// NAS - add comm, track processor

   comm uplink WSF_COMM_RCVR       // uplink to weapons
      network_name weapons_subnet
      internal_link data_mgr
   end_comm
   
   processor data_mgr WSF_TRACK_PROCESSOR
      master_track_processor 
      fused_track_reporting on
      purge_interval 60 s
   end_processor 

   script void on_platform_deleted()
      if (PLATFORM.Commander().IsValid()) // && PLATFORM.Commander().UplinkProcessor().IsValid)
      {
         PLATFORM.Commander().UplinkProcessor().StopUplinking(PLATFORM);
      }
   end_script
   
   execute at_time 0.1 s relative 
      writeln(" Weapon ",PLATFORM.Name()," GUIDER = ",PLATFORM.CommanderName());
   end_execute
   
end_platform_type

# dummy MRM launch computer, added the digit 1 before each rmax value of the SRM launch computer
include_once mrm_lc.txt

##############################################################################
### simple missile to use, requires uplink
##############################################################################
weapon MEDIUM_RANGE_RADAR_MISSILE WSF_EXPLICIT_WEAPON
   launched_platform_type MEDIUM_RANGE_RADAR_MISSILE
   weapon_effects SIMPLE_EFFECT   
   launch_computer MRM_LC end_launch_computer
   firing_delay           0.5 sec
   firing_interval        1 sec
   salvo_interval         5.0 sec
   slew_mode              azimuth_and_elevation
   azimuth_slew_limits    -180.0 deg 180.0 deg
end_weapon
