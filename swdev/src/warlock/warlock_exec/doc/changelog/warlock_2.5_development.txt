.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

* **(2.5.3)** Updated the following third party libraries: SQLite from 3.31.1 to 3.32.3 and Qt from 5.9.7 to 5.12.9. *(Issue #2301)*
* **(2.5.2)** Updated the following third party libraries: PNG from 1.6.34 to 1.6.37, GDAL from 2.0.3 to 3.0.4, Proj from 4.9.3 to 7.0.0, Tiff from 4.0.9 to 4.1.0, and SQLite from 3.29.0 to 3.31.1. *(Issue #2140)*
* **(2.5.2)** Relaxed the compiler version check for compatible plugins on Windows (MSVC). Only the first two digits, indicating C++ toolset major number and binary compatibility, are compared to those of the host application. *(ELSZ #133)*
* **(2.5.1)** Added the directory containing plugins to library search path for Windows to allow plugins to have dependencies on other plugins. *(ELSZ #172)*
* **(2.5.1)** Updated FFMPEG from 4.1.4 to 4.2.1 to resolve critical vulnerabilities. *(Issue #1816)*
* Plugins will need to be updated due to changes to the ``wkf::Plugin`` constructor which takes a ``size_t`` identifier in addition to the name.
* ``wkf::Environment`` has been modified to support registering Visibility Filters.  Plugins are able to add Visibility Filters which will change which platforms are displayed on the Map Display, Platform Browser, and the rest of the application. New plugins should reference ``wkf::Environment`` to see if a platform should be visible and not directly use the Team Visibility Preferences.
* Development path for ``vespatk`` resources is now configurable using the CMake variable ``VTK_DEV_RESOURCES_PATH``, which specifies the destination to which the resources will be extracted, and defaults to ``${CMAKE_SOURCE_DIR}/..``.
* Removed pure virtual method ``InitializeDefaultsP`` from the ``protected`` interface of class template ``wkf::PrefObjectT``. Default preferences should now be initialized by the default constructor of the template type argument. *(Issue #1538)*
* Virtual method ``LoadSettingsP`` from the ``protected`` interface of class template ``wkf::PrefObjectT`` has been modified and renamed to ``ReadSettings``. It now returns a copy of the preference data. The base ``SetPreferenceDataP`` method is responsible for actually updating the current preferences. 
* The ``ReadSettings`` and ``SaveSettingsP`` methods from the ``protected`` interface of class template ``wkf::PrefObjectT`` are now pure virtual.    
* Updated curl from 7.63.0 to 7.65.1, sqlite from 3.24.0 to 3.29.0, and ffmpeg from 4.1.0 to 4.1.4 to fix critical vulnerabilities. *(Issue #1553)*
* CMake configurations have been modified to allow for alternative methods of resource management. *(ELSZ #131)*
* CMake cache variable ``WSF_ADD_EXTENSION_PATH`` is now used as an additional search path for plugins. *(ELSZ #205)*
