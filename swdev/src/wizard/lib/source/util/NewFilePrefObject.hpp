// ****************************************************************************
// CUI
//
// The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
//
// Copyright 2019 Infoscitex, a DCS Company. All rights reserved.
//
// The use, dissemination or disclosure of data in this file is subject to
// limitation or restriction. See accompanying README and LICENSE for details.
// ****************************************************************************

#ifndef WIZARD_NEW_FILE_PREF_OBJECT_HPP
#define WIZARD_NEW_FILE_PREF_OBJECT_HPP

#include "ViExport.hpp"
#include "WkfPrefObject.hpp"

namespace wizard
{
struct HeadingData
{
   std::string mName;
   std::string mText;
   bool        mEnableComment = true;
   bool        mEnableMacros  = true;
};

struct NewFilePrefData
{
   //! Default constructor.
   //! Initializes mData with a single HeadingData
   //! Comment and Macros enabled, Name = "default", Text = "File generated by Wizard %VERSION% on %DATE%.".
   NewFilePrefData();

   std::vector<HeadingData> mData;
};

struct NewFileDataRange
{
   using iterator = typename std::vector<HeadingData>::const_iterator;
   iterator mBegin;
   iterator mEnd;

   iterator begin() const noexcept { return mBegin; }
   iterator end() const noexcept { return mEnd; }
};

class VI_EXPORT NewFilePrefObject : public wkf::PrefObjectT<NewFilePrefData>
{
   Q_OBJECT
public:
   static constexpr const char* cNAME = "NewFileOptions";

   NewFilePrefObject(QObject* aParent = nullptr);
   ~NewFilePrefObject() noexcept override = default;

   void Apply() override;

   // Copy-move
   void SetPreferences(NewFilePrefData aData);

   NewFilePrefData ReadSettings(QSettings& aSettings) const override;
   void            SaveSettingsP(QSettings& aSettings) const override;

   int GetHeadingCount() const noexcept;

   HeadingData*       GetHeading(const std::string& aName);
   const HeadingData* GetHeading(const std::string& aName) const;

   HeadingData& AddHeading();
   void         RemoveHeading(const std::string& aName);

   void SortList();

   NewFileDataRange Data() const;

   HeadingData*       First();
   const HeadingData* First() const;
};
} // namespace wizard

Q_DECLARE_METATYPE(wizard::NewFilePrefData)

#endif
