:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

electronic_warfare
------------------

.. command:: electronic_warfare
   :block:

.. parsed-literal::

 electronic_warfare *<name>* *<type-name>*
    debug_
    technique *<technique-name>* *<technique-type>*
       ... :ref:`Electronic Warfare Technique Commands <electronic_warfare_technique.commands>` ...
    end_technique
 end_electronic_warfare

* <name> : Name of the new Electronic Warfare type to be created.
* <type-name> : Name of an existing Electronic Warfare type or :model:`WSF_ELECTRONIC_ATTACK` or :model:`WSF_ELECTRONIC_PROTECT`,
  whose definition will be used as the initial definition of the new type.

Overview
========

An electronic_warfare provides the ability to define Electronic Warfare types for :command:`electronic_attack` and
:command:`electronic_protect` in transmitters and receivers, respectively. The :command:`Electronic Attack (EA) <electronic_attack>` -
:command:`electronic protect (EP) <electronic_protect>` architecture provides the ability to define EA and EP techniques and
assess the interaction of these techniques.  Multiple techniques are allowed for both EA and EP capability blocks.  The
effect at the receiver is as defined in the EA technique block unless the EP technique block defines a mitigating
technique with an associated effect for the particular EA technique being considered.

.. _electronic_warfare.commands:

Commands
========

.. command:: debug
   
   Specifies to use a debug mode to output debug data to the standard output.
   
   **Default** false or off

.. command:: technique  <technique-name> [<technique-type-name>] ... end_technique

Defines the uniquely named technique and its derived type, if required. Multiple technique blocks can be entered.

* <technique-name>* : A string input of the technique's unique name.
* <technique-type-name>* : A string input of the technique's type. If editing an instance name already defined this
  input is not required.

