:orphan:

.. ****************************************************************************
.. CUI//REL TO USA ONLY
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

uci_interface
-------------

.. contents::
   :local:

.. command:: uci_interface ... end_uci_interface
   :block:

   .. parsed-literal::

    uci_interface
      message_topic_ ...
      service_name_ ...
      service_descriptor_ ...
    end_uci_interface

Overview
========

The uci_interface_ block provides configuration data for use when connecting and communicating 
:doc:`Universal Command and Control Interface (UCI)<universal_command_and_control>` messages over the UCI Abstract Service 
Bus (ASB).  Options are provided to subscribe to supported UCI messages using various topics, specify the UCI service name
used by the ASB, and the service descriptor associated with the UCI service name.

.. warning:: A uci_interface block must be provided in order to utilize UCI messaging; otherwise the simulation will execute without it.

.. _uci_interface.Commands:

Commands
========

.. command:: message_topic <Message-Type> <string>

   Publish / subscribe to a given UCI message with the supplied topic name.
   
   The message types currently supported are the following:
   
   * :class:`UCI_AMTI_ActivityMessage`
   * :class:`UCI_AMTI_CapabilityMessage`
   * :class:`UCI_AMTI_CapabilityStatusMessage`
   * :class:`UCI_AMTI_CommandMessage`
   * :class:`UCI_AMTI_CommandStatusMessage`
   * :class:`UCI_AMTI_SettingsCommandMessage`
   * :class:`UCI_AMTI_SettingsCommandStatusMessage`
   * :class:`UCI_ControlRequestMessage`
   * :class:`UCI_ControlRequestStatusMessage`
   * :class:`UCI_ControlStatusMessage`
   * :class:`UCI_EntityMessage`
   * :class:`UCI_ESM_ActivityMessage`
   * :class:`UCI_ESM_CapabilityMessage`
   * :class:`UCI_ESM_CapabilityStatusMessage`
   * :class:`UCI_ESM_CommandMessage`
   * :class:`UCI_ESM_CommandStatusMessage`
   * :class:`UCI_ESM_SettingsCommandMessage`
   * :class:`UCI_ESM_SettingsCommandStatusMessage`
   * :class:`UCI_POST_ActivityMessage`
   * :class:`UCI_POST_CapabilityMessage`
   * :class:`UCI_POST_CapabilityStatusMessage`
   * :class:`UCI_POST_CommandMessage`
   * :class:`UCI_POST_CommandStatusMessage`
   * :class:`UCI_POST_SettingsCommandMessage`
   * :class:`UCI_POST_SettingsCommandStatusMessage`
   * :class:`UCI_StrikeActivityMessage`
   * :class:`UCI_StrikeCapabilityMessage`
   * :class:`UCI_StrikeCapabilityStatusMessage`
   * :class:`UCI_StrikeCommandMessage`
   * :class:`UCI_StrikeCommandStatusMessage`
   * :class:`UCI_StrikeSettingsCommandMessage`
   * :class:`UCI_StrikeSettingsCommandStatusMessage`
   * :class:`UCI_SubsystemStatusMessage`
   * :class:`UCI_SystemStatusMessage`
   
   .. note::
      The topic names of message publishers and subscribers must be identical.
   
   .. note::
      By default, these inputs do not need to be provided; connections are automatically made with the message name
      as the topic name.  For example, the UCI "Entity" message is associated with the "Entity" topic name.

   Example::
   
      message_topic Entity tracks

.. command:: service_name <string>

   Specifies the name of the UCI service identifier that is associated with the UCI interface's Abstract Bus.
   This service name is embedded into the xml as part of the service identifier for all transmitted messages over the Abstract Bus.  

   .. warning::
      The supplied service name must match a corresponding service name as specified in the :doc:`activemq` configuration file.
   
   **Default:** None (Must be specified)
   
   Example::
   
      service_name sense

.. command:: service_descriptor <string>

   Specifies an arbitrary descriptive label to that is associated with the UCI service identifier.
   This label is embedded into the xml as part of the service identifier for all transmitted messages over the Abstract Bus.

   **Default:** uci
