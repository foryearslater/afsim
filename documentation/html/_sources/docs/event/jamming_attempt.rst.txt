:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

.. _JAMMING_ATTEMPT:

JAMMING_ATTEMPT
---------------

Format
======

*All Events*

::

 <time> JAMMING_ATTEMPT <transmitter platform name> <receiver platform name>
  Xmtr: <transmitter name> BeamNumber: <beam number> Rcvr: <receiver name>

 **EM Interaction Info goes here**

 **If receiver Noise Power > 0**
  J/N: <(receiver power/receiver noise power)>

Breakdown
=========

<time>
    current simulation time
JAMMING_ATTEMPT
    event recorded in this message
<transmitter platform name>
    platform that hosts transmitter
<receiver platform name>
    platform that owns sensor being jammed
Xmtr: <transmitter name>
    name of sensor or weapon attempting to jam transmissions
BeamNumber: <beam number>
    Identifying beam number of transmitter, starting at 1.
Rcvr: <receiver name>
    name of sensor being jammed
*EM Interaction Fields are inserted here.*
    See :ref:`emi-data` link for a full description of all EM Interaction Fields.

*Following field(s) printed only if receiver Noise Power > 0*

J/N: <(receiver power/receiver noise power)>
    noise power

How to Show Event Messages
==========================

.. parsed-literal::

  :command:`event_output`
     file replay.evt              # write event messages to file "replay.evt"
     enable JAMMING_ATTEMPT
  end_event_output

How it Appears in Output
========================
