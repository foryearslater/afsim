:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WSF_EP_TECHNIQUE
----------------

.. model:: technique WSF_EP_TECHNIQUE
   
.. parsed-literal::

   # Defining a new type:
   electronic_warfare_technique <name> WSF_EP_TECHNIQUE_
      default_on_
      externally_controlled_
      internally_controlled_
      mitigated_techniques_
        <ea-technique-name>
        ...
        <ea-technique-name>
      end_mitigated_techniques
      mitigated_technique_classes_
        <ea-technique-class-name>
          ...
        <ea-technique-class-name>
      end_mitigated_technique_classes
      
      ... :ref:`Electronic Warfare Technique Commands <electronic_warfare_technique.commands>` ...
    end_electronic_warfare_technique

.. parsed-literal::

   # Adding an instance of the base type inside an ':command:`electronic_protect`' block:
   ...
      technique <name> WSF_EP_TECHNIQUE_
         default_on_
         mitigated_techniques_
           <ea-technique-name>
           ...
           <ea-technique-name>
         end_mitigated_techniques
         mitigated_technique_classes_
           <ea-technique-class-name>
             ...
           <ea-technique-class-name>
         end_mitigated_technique_classes

         ... :ref:`Electronic Warfare Technique Commands <electronic_warfare_technique.commands>` ...
      end_technique
   ...

**<name>**
   Name of the Electronic Warfare technique type or instance to be created.

Overview
========

An :command:`electronic_warfare_technique` provides the ability to define Electronic Warfare techniques with associated
:command:`Electronic Warfare Effects <electronic_warfare_effect>`. Multiple effect definitions are allowed.

.. block:: WSF_EP_TECHNIQUE

.. _WSF_EP_TECHNIQUE_Commands:

Commands
========

.. command:: default_on 
   
   Set the behavior of the technique to be active. Otherwise, technique will remain inactive until commanded to become
   active.

.. command:: externally_controlled
   
   Specify to prohibit the automatic use of technique internally and allow only external (i.e., scripted or commanded)
   control. This action is not the default for applying EP techniques and is overridden by the default_on_

.. command:: internally_controlled
   
   Specify to allow the automatic use of the technique internally, any external control may be overridden. This action
   modifies the default_on_ value to be on if the technique is required to be used and is the default method for
   applying EP techniques.

.. command:: mitigated_techniques <ea-technique-name> ... <ea-technique-name> ... end_mitigated_techniques
   
   Defines the EA techniques this EP technique can attempt to mitigate.
   
   **<ea-technique-name>**
      A string input of the EA technique name this EP technique is to attempt to mitigate. Multiple
      techniques names can be input for multiple techniques.

   .. note::
   
      This input is an alternative or addition to the mitigated_technique_classes_.

.. command:: mitigated_technique_classes <ea-technique-class-name> ... <ea-technique-class-name> ... end_mitigated_technique_classes
   
   Defines the EA technique classes this EP technique can attempt to mitigate.
   
   **<ea-technique-class-name>**
      A string input of the EA technique's :command:`mitigation_class_name <WSF_EA_TECHNIQUE.mitigation_class_name>`
      this EP technique is to attempt to mitigate. Multiple class names can be input for multiple types of classes.

   .. note::
   
      This input is an alternative or addition to the mitigated_techniques_.
