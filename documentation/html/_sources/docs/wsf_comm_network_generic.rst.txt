:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WSF_COMM_NETWORK_GENERIC
------------------------

.. model:: network WSF_COMM_NETWORK_GENERIC

Script Class: :class:`WsfNetworkGeneric`

.. parsed-literal::

   network <name> :model:`WSF_COMM_NETWORK_GENERIC`
      ... :ref:`network Commands <network.Commands>` ...
      
      comm_list_
         member <string-value> <string-value>
         ...
      end_comm_list
      
      address_list_
         member <address-value>
         ...
      end_address_list
      
      comm_link_list_
         link <string-value> <string-value> <string-value> <string-value>
         ...
      end_comm_link_list
      
      address_link_list_
         link <address-value> <address-value>
         ...
      end_address_link_list      
      
   end_network
   
Overview
========

:model:`WSF_COMM_NETWORK_GENERIC` provides a generic network that has no specific network implementation rules,
other than links must be made between existing network members. Linkage in this network is completely defined
by the specified connections, allowing custom network topologies. Note that just because a link may be specified
between comms in this network, does not guarantee that the comm objects may still communicate with other due
to type differences or incompatibilities.

Commands
========

.. command:: comm_list ... end_comm_list

   Members of this network may be specified by identifying a comm object by its owning platform name and 
   the name of the comm. Each entry in this list is prefixed by the "member" command.

.. command:: address_list ... end_address_list

   Members of this network may be specified by identifying a comm object by its address. Each entry in this
   list is prefixed by the "member" command. This list is only available to comm objects that have specified
   addresses in input, as comms without specified addresses will be dynamically allocated at runtime.

.. command:: comm_link_list ... end_comm_link_list

   Specifies a link between comm objects specified by their owning platform name, and the comm name, represented
   as directional pairs. The order specified matters, as a link is only created from the first comm specified,
   to the second comm specified. Each entry in this list is prefixed by the "link" command.
   
.. command:: address_link_list ... end_address_link_list

   Specifies a link between comm objects defined by their addresses. The order specified matters, as a link is
   only created from the first address specified to the second. Each entry in this list is prefixed by the
   "link" command.
