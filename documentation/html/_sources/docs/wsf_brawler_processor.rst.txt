:orphan:

.. ****************************************************************************
.. CUI//REL TO USA ONLY
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WSF_BRAWLER_PROCESSOR
---------------------

.. model:: processor WSF_BRAWLER_PROCESSOR

   .. parsed-literal::

    :command:`platform` <platform-name> WFS_BRAWLER_PLATFORM
       mind_file_ ...
       mover_ ...
       debug_ ...
       draw_alternatives_ ...
       draw_nominal_states_ ...
       time_allowed_per_sector_search_ ...
       consciousness_event_update_time_ ...

       ... [[platform|Platform Commands]] ...
    end_platform

Overview
========

   The WSF_BRAWLER_PROCESSOR "processor_type" is to be used for BRAWLER within-visual-range air-to-air combat maneuvering.  See
   the "brawler_demo" for several examples of it's use.  The WSF_BRAWLER_PROCESSOR uses a :model:`WSF_BRAWLER_MOVER`,
   :model:`WSF_PERCEPTION_PROCESSOR`, and a :model:`WSF_QUANTUM_TASKER_PROCESSOR` with script behaviors that leverage the :class:`WsfBrawlerProcessor`
   evaluation and control functions.  The WSF_BRAWLER_PROCESSOR relies on receiving a "WEAPON" task to know who its target
   is for 1v1 aerial combat maneuvering; this is exampled in the demo.  See the :class:`WsfBrawlerProcessor` script object class for all
   supported mover and route commands.

Commands
========

.. command:: mind_file <file-name>

   Specify a BRAWLER mind file for modeling mind and consciousness event updating.  The MIND files in the BRAWLER unclassified
   release are 100% compatible.

   **Default** No File - default values used

.. command:: mover :model:`WSF_BRAWLER_MOVER` mover-commands ... end_mover

   Defines the BRAWLER mover to be used by the BRAWLER platform.

.. command:: debug

   If specified, debug information for every alternative evaluation will be printed to the standard output.

.. command:: draw_alternatives

   If specified, color coded dots of every forward-projected alternative will be rendered to the DIS replay file.
   Green means the alternative evaluated close to the maximum value seen so far, red means the opposite, yellow/orange is in between.

.. command:: draw_nominal_states

   If specified, color coded dots of my target's forward-projected nominal state will be rendered to the DIS replay file. Blue dots are mine and purple dots are my target.  BRAWLER nominal states projection is simply a physics based forward projection where acceleration is ignored and velocity in locked constant for the projection.  The nominal states are often used in the evaluation functions.

.. command:: time_allowed_per_sector_search <time-value>

   Supposed to represent that time allowed to search a sector of the sky.  Affects consciousness event timing.

   **Default** 10 seconds

.. command:: consciousness_event_update_time <time-value>

   Override BRAWLER consciousness event timing.  If specified, all consciousness events will occur at this interval.  Otherwise a
   dynamic timing calculation will regularly occur to determine proper consciousness event update times.

   **Default** not specified

