:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WSF_COMM_NETWORK_DIRECTED_RING
------------------------------

.. model:: network WSF_COMM_NETWORK_DIRECTED_RING

Script Class: :class:`WsfNetworkDirectedRing`

.. parsed-literal::

   network <name> :model:`WSF_COMM_NETWORK_DIRECTED_RING`
      ... :ref:`network Commands <network.Commands>` ...
      
      comm_list_
         member <string-value> <string-value>
         ...
      end_comm_list
      
      address_list_
         member <address-value>
         ...
      end_address_list
      
   end_network
   
Overview
========

:model:`WSF_COMM_NETWORK_DIRECTED_RING` provides a generic network that enforces a ring topology. 
All members of this network are ordered, with each member having an incoming link from the higher ordered
comm object, and an outgoing link to lower ordered comm object. Thus, this network only allows messages to
pass in one direction around the ring.

This network requires the provision of at least three members before links are created. 
The ordering is implied via the comm_list and address_list defined members, in which comms specified
by address (if applicable) are ordered by input, followed by comms specified by platform/comm name. 
The last ordered member links to the first to complete the ring.

Commands
========

.. command:: comm_list ... end_comm_list

   Members of this network may be specified by identifying a comm object by its owning platform name and 
   the name of the comm. Each entry in this list is prefixed by the "member" command.

.. command:: address_list ... end_address_list

   Members of this network may be specified by identifying a comm object by its address. Each entry in this
   list is prefixed by the "member" command. This list is only available to comm objects that have specified
   addresses in input, as comms without specified addresses will be dynamically allocated at runtime.
