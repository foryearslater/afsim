:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WsfEarthJ2Term
--------------

.. class:: WsfEarthJ2Term inherits WsfOrbitalDynamicsTerm

Overview
========

The :class:`WsfEarthJ2Term` represents the additional acceleration due to the
oblateness of the Earth. See also :ref:`Earth J2 Perturbation <orbital_dynamics_terms.earth_j2>`.

Static Methods
==============

.. method:: WsfEarthJ2Term Construct()

   Construct a :class:`WsfEarthJ2Term` using default values of the gravitational
   parameter (3.986004415e+14 m^3/s^2), the mean radius of the Earth (6371.0 km),
   and :math:`J_2` (0.0010826267).

.. method:: WsfEarthJ2Term Construct(double aGravitationalParameter, double aMeanRadius, double aJ2)

   Construct a :class:`WsfEarthJ2Term` using the given gravitational parameter
   in SI units, the given mean radius of the Earth in meters, and the given
   value for :math:`J_2`.

.. method:: double DefaultJ2()

   Return the default value for :math:`J_2` (0.0010826267).

Methods
=======

.. method:: double GravitationalParameter()

   Return the gravitational parameter in SI units used by this term.

.. method:: double MeanRadius()

   Return the mean radius in meters of the Earth used by this term.

.. method:: double J2()

   Return the value of :math:`J_2` used by this term.

.. method:: Vec3 ComputeAcceleration(double aMass, Calendar aTime, Vec3 aPosition, Vec3 aVelocity)

   For the :class:`WsfEarthJ2Term` this method will return the zero vector; the
   acceleration provided by this term can only be computed when the dynamics are
   fully initialized and are in use by a :class:`WsfIntegratingSpaceMover`.
