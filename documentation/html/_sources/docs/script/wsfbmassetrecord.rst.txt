:orphan:

.. ****************************************************************************
.. CUI//REL TO USA ONLY
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WsfBMAssetRecord
----------------

.. class:: WsfBMAssetRecord
   :cloneable:
   :constructible:

**WsfBMAssetRecord** is the script interface for the battle manager's
friendly asset perception. This structure is used primarily for IADS
initialization within the battle manager models.


Methods
=======

.. method:: void InitNode(int platform_index, string name, string side)

   Initializes the record with the platform index, platform name, and side string.

   **Parameters**

      **int platform_index:** Platform id of the referenced asset.

      **string name:** Platform name of the referenced asset.

      **string side:** Team string. Only used for logging purposes.
      All assets assumed same-side as receiving battle manager.

.. method:: void AddDirectSubordinate(int platform_index, WsfBMAssetMap asset_map)

   Adds the asset record referenced by the platform id as a direct subordinate to this asset within the asset_map.

   **Parameters**

      **int platform_index:** Platform id of the referenced asset.

      **WsfBMAssetMap asset_map:** Asset Map from battle manager.

.. method:: void AddPeer(int platform_index, WsfBMAssetMap asset_map)

   Adds the asset record referenced by the platform id as a peer to this asset within the asset_map.

   **Parameters**      

      **int platform_index:** Platform id of the referenced asset.

      **WsfBMAssetMap asset_map:** Asset Map from battle manager.

.. method:: void AddDirectCommander(int platform_index, WsfBMAssetMap asset_map)

   Adds the asset record referenced by the platform id as the direct commander to this asset within the asset_map.

   **Parameters**

      **int platform_index:** Platform id of the referenced asset.

      **WsfBMAssetMap asset_map:** Asset Map from battle manager.

.. method:: void AddWeaponInfo(WsfBMWeaponInterface weapon_info)

   Adds the weapon information to this asset(for weapon platforms)

   **Parameters**

      **WsfBMWeaponInterface weapon_info:** Weapon info to add to the asset record.

.. method:: void SetLocationECEF(double ecef_x_meters, double ecef_y_meters, double ecef_z_meters)

   Sets the location of the asset in WCS meters.

.. method:: void SetVelocityECEF(double ecef_vx_ms, double ecef_vy_ms, double ecef_vz_ms)

   Sets the velocity of the asset in WCS meters/second.

.. method:: void AttachDA(WsfZone zone, double priority)

   Adds zone as a defended area to the asset. This will make the asset a defended
   asset and carries special meaning to certain battle managers. Note that DA's are
   the only zone type that can be attached at the asset (platform) level.
   Weapon-zones such as missile, fighter, or other engagement zone types must be
   added at the weapon-level on the asset.

    **Parameters**

       **WsfZone zone:** Zone definition of the defended area.

       **double priority:** Zone priority 1.0 being the highest priority
       and lesser priorities higher.

.. method:: void SetMaxPlatformAssignments(int max_assignments)

   Sets the max assignments for the asset.

.. method:: void SetCurrPlatformAssignments(int num_assignments)

   Sets the current assignments for the asset. This is done only at
   initialization time and future asset perception continues to set
   this going forward.

.. method:: void SetPlatformAssignmentDelay(int delay_seconds)

   Sets the assignment delay for the asset.

.. method:: void SetSystemStatusRed()

   Sets the asset status as red(down).

.. method:: void SetSystemStatusGreen()

   Sets the asset status as green(normal).

.. method:: void SetSystemStatusWhite()

   Sets the asset status as white(out of munitions).

   **Note:** An asset that is out of munitions is not required to be set white, this
   will be inferred by the battle managers. Setting the status to white is simply
   a convention for logging.

.. method:: int GetID()

   Gets the platform id associated with this asset record.

.. method:: void SetC2Capable(bool c2_capable_flag)

   Sets asset as C^2 capable if the flag is true, otherwise false.

   **Note:** An asset that is marked as C^2 capable has special meaning to both the
   battle manager and C^2 dissemination models. Generally, these are considered
   intermediate C^2 units for the purposes of the IADS chain of command.

.. method:: bool GetC2Capable()

   Returns true if the asset was marked as C^2 capable via a call to
   `SetC2Capable <#WsfBMAssetRecord.SetC2Capable>`__, otherwise false.

.. method:: void SetDefaultDefendedPriority(double priority)

   Sets the default defended asset priority for the case that this is a
   battle manager asset but no defended zones are attached.

