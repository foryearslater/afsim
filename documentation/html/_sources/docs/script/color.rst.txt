:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

Color
-----

.. class:: Color inherits Object
   :constructible:
   :cloneable:

:class:`Color` is the utility scripting class to represent colors. Colors are represented as a set of Red, Green, Blue, Alpha (RGBA) integer values ranging from [0, 255]. A default constructed Color represents black with the values (0, 0, 0, 255).

Static Methods
==============

.. method:: static Color Construct(int aRed, int aGreen, int aBlue)
            static Color Construct(int aRed, int aGreen, int aBlue, int aAlpha)

   Creates a Color with the given RGB and alpha values. If no alpha is specified, 255 is used.

.. method:: static Color Construct(string aHex)

   Creates a Color with the given hex value.

.. method:: static Color Black()

   Returns a Color with values (0, 0, 0, 255).

.. method:: static Color Blue()

   Returns a Color with values (0, 168, 220, 255).

.. method:: static Color Brown()

   Returns a Color with values (61, 33, 0, 255).

.. method:: static Color DarkBlue()

   Returns a Color with values (0, 107, 140, 255).

.. method:: static Color DarkGreen()

   Returns a Color with values (0, 160, 0, 255).

.. method:: static Color DarkPurple()

   Returns a Color with values (80, 0, 80, 255).

.. method:: static Color DarkRed()

   Returns a Color with values (200, 0, 0, 255).

.. method:: static Color DarkYellow()

   Returns a Color with values (225, 220, 0, 255).

.. method:: static Color Green()

   Returns a Color with values (0, 226, 0, 255).

.. method:: static Color Indigo()

   Returns a Color with values (74, 0, 159, 255).

.. method:: static Color LightBlue()

   Returns a Color with values (128, 224, 255, 255).

.. method:: static Color LightGreen()

   Returns a Color with values (170, 255, 170, 255).

.. method:: static Color LightPurple()

   Returns a Color with values (255, 161, 255, 255).

.. method:: static Color LightRed()

   Returns a Color with values (255, 128, 128, 255).

.. method:: static Color LightYellow()

   Returns a Color with values (255, 255, 128, 255).

.. method:: static Color Magenta()

   Returns a Color with values (255, 0, 255, 255).

.. method:: static Color Orange()

   Returns a Color with values (255, 170, 0, 255).

.. method:: static Color Pink()

   Returns a Color with values (255, 0, 192, 255).

.. method:: static Color Purple()

   Returns a Color with values (128, 0, 128, 255).

.. method:: static Color Red()

   Returns a Color with values (255, 48, 49, 255).

.. method:: static Color Tan()

   Returns a Color with values (182, 133, 56, 255).

.. method:: static Color Violet()

   Returns a Color with values (192, 128, 255, 255).

.. method:: static Color White()

   Returns a Color with values (255, 255, 255, 255).

.. method:: static Color Yellow()

   Returns a Color with values (255, 255, 0, 255).

Methods
=======

.. method:: int GetAlpha()
.. method:: int GetBlue()
.. method:: int GetGreen()
.. method:: int GetRed()

   Returns the [0, 255] value of the desired color component or alpha.

.. method:: string GetHexString()

   Returns the Color's hex value.

.. method:: string GetRGBA_String()

   Returns the Color's RGBA value in the following format::

      <R> <G> <B> <A>
   
   where each component is in the range [0, 255].

.. method:: void Set(int aRed, int aGreen, int aBlue)

   Sets the Color to the desired RGB values.

.. method:: void Set(Color aColor)

   Sets the Color to the same values as aColor.

.. method:: void SetAlpha(int aAlpha)

   Sets the Color's alpha value.
