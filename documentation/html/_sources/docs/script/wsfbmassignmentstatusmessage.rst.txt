:orphan:

.. ****************************************************************************
.. CUI//REL TO USA ONLY
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WsfBMAssignmentStatusMessage
----------------------------

.. class:: WsfBMAssignmentStatusMessage inherits WsfMessage
   :cloneable:
   :constructible:

**WsfBMAssignmentStatusMessage** is the script interface for the battle
manager's assignment status messages. Any assignment status reporting
coming into or out of the battle manager will be through this structure.


Methods
=======

.. method:: void SetAckTime(double assignment_status_sim_time_seconds)

   Sets the simulation time of the assignment status in seconds.

.. method:: double GetAckTime()

   Returns the simulation time of the assignment status in seconds.

.. method:: void SetTrackID(int reporting_platform_idx, int tan)

   Sets the track for the assignment.

   **Parameters**

      **int reporting_platform_idx:** Reporting Platform Index.

      **int tan:** Track number.

.. method:: void SetTrackID(WsfTrackId track_id)

   Sets the track for the assignment.

.. method:: int GetTrackingSystemID()

   Gets the reporting_platform_idx set within the [SetTrackID]{#SetTrackID} call.

.. method:: int GetTrackID()

   Gets the tan set within the [SetTrackID]{#SetTrackID} call.

.. method:: WsfTrackId GetTrackID()

   Gets the tan set within the [SetTrackID]{#SetTrackID} call.

.. method:: void SetAssignedID(int assigned_platform_id, int assigned_weapon_index)

   Sets the assigned weapon from the assignment message.

   **Parameters**

      **int assigned_platform_id:** Platform id of the assigned asset.

      **int weapon_idx:** Weapon index(0-based) of the :class:`WsfWeapon`
      on the reported platform for this assignment.

.. method:: int GetAssignedUnitID()

   Returns the Platform id of the assigned asset from the call to
   `SetAssignedID <#WsfBMAssignmentStatusMessage.SetAssignedID>`__.

.. method:: int GetAssignedWeaponID()

   Returns the Weapon index(0-based) of the :class:`WsfWeapon`
   on the reported platform for the assignment.

.. method:: void SetInitiatingID(int assignment_initiator_platform_id)

   Sets the platform id of the initiator of the assignment message. In the case
   of a delegate assignment, this will be the original assigning platform id.

.. method:: int GetInitiatingUnitID()

   Returns the platform id of the assignment initiator. In the case of a
   delegate assignment, this will be the original assigning platform id.

.. method:: void SetAssigningID(int assigning_platform_id)

   Sets the platform id of the assigning platform id from the assignment. For
   commit(non-delegate) assignments, this will be the same  as the initiating
   platform id.

.. method:: int GetAssigningUnitID()

   Returns the platform id of the assigning platform id from the assignment. For
   commit(non-delegate) assignments, this will be the same  as the initiating platform id.

.. method:: void SetAssignmentStatusUnacknowledged()

   Sets the assignment status to Unacknowledged.

.. method:: void SetAssignmentStatusWilco()

   Sets the assignment status to Will Comply.

.. method:: void SetAssignmentStatusCommitted()

   Sets the assignment status to Committed.

.. method:: void SetAssignmentStatusCueTAR()

   Sets the assignment status to TAR Cued.

.. method:: void SetAssignmentStatusCueTTR()

   Sets the assignment status to TTR Cued.

.. method:: void SetAssignmentStatusTARSearching()

   Sets the assignment status to TAR Searching.

.. method:: void SetAssignmentStatusTTRSearching()

   Sets the assignment status to TTR Searching.

.. method:: void SetAssignmentStatusTARTracking()

   Sets the assignment status to TAR Tracking.

.. method:: void SetAssignmentStatusTTRTracking()

   Sets the assignment status to TTR Tracking.

.. method:: void SetAssignmentStatusFiring()

   Sets the assignment status to weapon firing.

.. method:: void SetAssignmentStatusMiss()

   Sets the assignment status to weapon missed.

.. method:: void SetAssignmentStatusChangedAssignedUnit()

   Sets the assignment status to notify that a lower level C^2 overrode the assigned weapon.

.. method:: void SetAssignmentStatusKill()

   Sets the assignment status to target killed.

.. method:: void SetAssignmentStatusCancelled()

   Sets the assignment status to cancelled acknowledged.

.. method:: void SetAssignmentStatusHavecoSuccess()

   Sets the assignment status to Have-Complied(Success).

.. method:: void SetAssignmentStatusHavecoFailure()

   Sets the assignment status to Have-Complied(Failed).

.. method:: void SetAssignmentStatusCantco()

   Sets the assignment status to Cannot Comply.

.. method:: bool IsAssignmentStatusUnacknowledged()

   Returns true if the assignment status is Unacknowledged, otherwise false.

.. method:: bool IsAssignmentStatusWilco()

   Returns true if the assignment status is Will Comply, otherwise false.

.. method:: bool IsAssignmentStatusCommitted()

   Returns true if the assignment status is Committed, otherwise false.

.. method:: bool IsAssignmentStatusCueTAR()

   Returns true if the assignment status is TAR Cued, otherwise false.

.. method:: bool IsAssignmentStatusCueTTR()

   Returns true if the assignment status is TTR Cued, otherwise false.

.. method:: bool IsAssignmentStatusTARSearching()

   Returns true if the assignment status is TAR Searching, otherwise false.

.. method:: bool IsAssignmentStatusTTRSearching()

   Returns true if the assignment status is TTR Searching, otherwise false.

.. method:: bool IsAssignmentStatusTARTracking()

   Returns true if the assignment status is TAR Tracking, otherwise false.

.. method:: bool IsAssignmentStatusTTRTracking()

   Returns true if the assignment status is TTR Tracking, otherwise false.

.. method:: bool IsAssignmentStatusFiring()

   Returns true if the assignment status is Weapon Firing, otherwise false.

.. method:: bool IsAssignmentStatusMiss()

   Returns true if the assignment status is Weapon Missed, otherwise false.

.. method:: bool IsAssignmentStatusChangedAssignedUnit()

   Returns true if the assignment status is Weapon Assignment overridden,
   otherwise false.

.. method:: bool IsAssignmentStatusKill()

   Returns true if the assignment status is Target Killed, otherwise false.

.. method:: bool IsAssignmentStatusCancelled()

   Returns true if the assignment status is cancel acknowledge, otherwise false.

.. method:: bool IsAssignmentStatusHavecoSuccess()

   Returns true if the assignment status is Have Complied(Success),
   otherwise false.

.. method:: bool IsAssignmentStatusHavecoFailure()

   Returns true if the assignment status is Have Complied(Failed),
   otherwise false.

.. method:: bool IsAssignmentStatusCantco()

   Returns true if the assignment status is Cannot Comply, otherwise false.

.. method:: void SetSalvosFired(int salvos_fired)

   Sets the number of salvos the weapon has fired at the assigned track.

.. method:: int GetSalvosFired()

   Returns the number of salvos the weapon has fired at the assigned track.

.. method:: void SetCantcoReason(string cantco_reason)

   Sets the CANTCO reason if the assignment status is CANTCO(Cannot
   Comply). The string is free-form and used for debugging/logging.

.. method:: string GetCantcoReason()

   Returns the CANTCO reason in string format for logging/debug purposes.

.. method:: void SetSystemicCantcoGlobal()

   Sets the CANTCO to a global systemic CANTCO. This will cause the weapon
   to be removed from further consideration for assignment for all threats.

.. method:: void SetSystemicCantcoLocal()

   Sets the CANTCO to a local systemic CANTCO. This will cause the weapon
   to be removed from further consideration for assignment for the
   assignment track but will be available for other tracks.

.. method:: bool IsSystemicCantcoGlobal()

   Returns true if the assignment status is a global systemic CANTCO.

.. method:: bool IsSystemicCantcoLocal()

   Returns true if the assignment status is a local systemic CANTCO.

.. method:: void SetOverridingID(int overridding_platform_id)

   If the assignment status is marked as overridden(via
   `IsAssignmentStatusChangedAssignedUnit <#WsfBMAssignmentStatusMessage.IsAssignmentStatusChangedAssignedUnit>`__,
   then this sets the simulation platform index of the overriding C^2 platform.

.. method:: int GetOverridingUnitID()

   If the assignment status is marked as overridden(via
   `IsAssignmentStatusChangedAssignedUnit <#WsfBMAssignmentStatusMessage.IsAssignmentStatusChangedAssignedUnit>`__,
   then this returns the simulation platform index of the overriding C^2 platform.

.. method:: void SetNewlyAssignedID(int assigned_platform_id, int assigned_weapon_index)

   Sets the newly assigned weapon for the assignment override.

   **Parameters**

      **int assigned_platform_id:** Platform id of the assigned asset.

      **int weapon_idx:** Weapon index(0-based) of the
      :class:`WsfWeapon` on the reported platform for this assignment.

.. method:: int GetNewlyAssignedUnitID()

   Returns the Platform id of the new assigned platform for the assignment override.

.. method:: int GetAssignedWeaponID()

   Returns the Weapon index(0-based) of the
   :class:`WsfWeapon` on the new assigned
   weapon for the assignment override.

.. method:: void Print()

   Logs the assignment status message to the log output stream.

