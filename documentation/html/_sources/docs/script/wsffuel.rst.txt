:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WsfFuel
-------

.. class:: WsfFuel inherits WsfPlatformPart

WsfFuel encapsulates the ability to make queries regarding fuel status.  This script can also add or subtract fuel from a platform.

Methods
=======

.. method:: string CurrentMode()
   
   Return the name of the current fuel mode.

.. method:: void SelectMode(string aMode)
   
   Select the specified mode and make it the current mode.

.. method:: bool Refuel()
            bool Refuel(double aAmount)
   
   Refuels the platform to its maximum fuel capacity.  Returns 'true' if successful.

.. method:: double QuantityRemaining()
   
   Returns the quantity of fuel in kg remaining on the platform.

.. method:: double QuantityRequired(double aDistance)
            double QuantityRequired(double aDistance, double aAltitude, double aSpeed)
   
   Returns the quantity of fuel in kg required to travel the given distance. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double QuantityRequired(WsfRoute aRoute)
   
   Returns the quantity of fuel in kg required to travel the given route. The altitude and speed of each waypoint in the route are used in the calculation.

.. method:: void SetQuantityRemaining(double aQuantityRemaining)

   Sets the remaining fuel quantity to the specified value (kg).
   
.. method:: double ConsumptionRate()
            double ConsumptionRate(double aAltitude, double aSpeed)
   
   Returns the platform's fuel consumption rate (kg/sec). If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: void SetConsumptionRate(double aConsumptionRate)
   
   Sets the fuel consumption rate to the specified value (kg/sec).

   .. warning::
      This method should only be used with the fixed consumption rate fuel model (i.e., not table driven).
   
.. method:: double MaximumQuantity()
   
   Returns the maximum fuel quantity (kg).

.. method:: void SetMaximumQuantity(double aMaximumQuantity)

   Sets the maximum fuel quantity to the specified value (kg).

.. method:: double InitialQuantity()

   Returns the initial fuel quantity (kg).

.. method:: void SetInitialQuantity(double aInitialQuantity)
   
   Sets the initial fuel quantity to the specified value (kg).
   
.. method:: double BingoQuantity()
   
   Returns the bingo fuel quantity (kg).

.. method:: void SetBingoQuantity(double aBingoQuantity)
   
   Sets the bingo fuel quantity to the specified value (kg).

.. method:: double ReserveQuantity()
   
   Returns the reserve fuel quantity (kg).

.. method:: void SetReserveQuantity(double aReserveQuantity)
   
   Sets the reserve fuel quantity to the specified value (kg).

.. method:: double TimeAtBingo()
            double TimeAtBingo(double aAltitude, double aSpeed)

   Returns the time in seconds that the platform can travel after BINGO. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double TimeAtReserve()
            double TimeAtReserve(double aAltitude, double aSpeed)

   Returns the time in seconds that the platform can travel after reserve limit. If no altitude and speed are provided, the platform's current altitude and speed are used.
   
.. method:: double TimeToBingo()
            double TimeToBingo(double aAltitude, double aSpeed)
   
   Returns the time in seconds until the platform will declare BINGO. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double TimeToEmpty()
            double TimeToEmpty(double aAltitude, double aSpeed)
   
   Returns the time in seconds until the platform is completely out of fuel. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double TimeToReserve()
            double TimeToReserve(double aAltitude, double aSpeed)
   
   Returns the time in seconds until the platform reaches its fuel reserve limit. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double DistanceAtBingo()
            double DistanceAtBingo(double aAltitude, double aSpeed)

   Returns the distance in meters that the platform can travel after BINGO. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double DistanceAtReserve()
            double DistanceAtReserve(double aAltitude, double aSpeed)

   Returns the distance in meters that the platform can travel after reserve limit. If no altitude and speed are provided, the platform's current altitude and speed are used.
   
.. method:: double DistanceToBingo()
            double DistanceToBingo(double aAltitude, double aSpeed)

   Returns the distance in meters until the platform will declare BINGO. If no altitude and speed are provided, the platform's current altitude and speed are used.

.. method:: double DistanceToReserve()
            double DistanceToReserve(double aAltitude, double aSpeed)

   Returns the distance in meters until the platform reaches its fuel reserve limit. If no altitude and speed are provided, the platform's current altitude and speed are used.
      
.. method:: double DistanceToEmpty()
            double DistanceToEmpty(double aAltitude, double aSpeed)

   Returns the distance in meters until the platform is completely out of fuel. If no altitude and speed are provided, the platform's current altitude and speed are used.
