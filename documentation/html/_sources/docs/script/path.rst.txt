:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

Path
----

.. class:: Path inherits Object
   :constructible:
   :cloneable:

:class:`Path` is the utility scripting class to represent a system file path.

Static Methods
==============

.. method:: static Path Construct(Object aObject0, [Object aObjectN])

   Creates a Path object with the joined path of aObject0 - aObjectN. Objects can be either Paths or strings.

.. method:: static bool Exists(string aPath)

   Returns true if the given path is a file or directory that exists on the system; returns false otherwise.

.. method:: static Path GetRelativePath(string aLocalPath, string aReferencePath)

   Returns a Path of the relative path from aLocalPath to aReferencePath.

.. method:: static Path GetWorkingDirectory()

   Returns the path of the working directory.

.. method:: static bool IsDirectory(string aPath)

   Returns true if a string is an existing directory; returns false otherwise.

.. method::static bool IsFile(string aPath)

   Returns true if a string is an existing file; returns false otherwise.

.. method:: static bool MakeDirectory(string aPath)
            static bool MakeDirectory(string aPath, bool aCreateAll)

   Creates the given directory. If aCreateAll is true, all non-existing directories in the path will be created. aCreateAll is true by default. Returns true if the directory is created or already exists; returns false otherwise.

Methods
=======

.. method:: bool Exists()

   Returns true if the calling Path is a file or directory that exists on the system; returns false otherwise.

.. method:: Path GetParentDirectory()

   Returns a Path to the parent directory of the calling Path.

.. method::  string GetFileExtension()

   Returns the calling Path's file extension.

.. method:: string GetFileName()
            string GetFileName(bool aWithFileExtension)

   Returns the calling Path's file name. The file name will be returned with the file extension by default.

.. method:: Path GetRelativePath(string aReferenceDir)
            Path GetRelativePath(Path aReferenceDir)

   Returns a Path of the relative path from the calling Path to aReferenceDir.

.. method:: bool IsDirectory()

   Returns true if the calling Path is an existing directory; returns false otherwise.

.. method:: bool IsFile()

   Returns true if the calling Path is an existing file; returns false otherwise.

.. method:: void Join(Object aObject, [Object aObjectN])

   Joins the given objects to the calling Path. Objects can either be Paths or strings.

.. method:: bool MakeDirectory()
            bool MakeDirectory(bool aCreateAll)

   Creates the given directory. If aCreateAll is true, all non-existing directories in the path will be created. aCreateAll is true by default. Returns true if the directory is created or already exists; returns false otherwise.

.. method:: string ToString()

   Returns the path as a string with operating system safe slashes.

.. method:: void Up();

   Sets the calling Path to its parent directory.
