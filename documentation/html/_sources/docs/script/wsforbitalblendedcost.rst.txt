:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WsfOrbitalBlendedCost
----------------------

.. class:: WsfOrbitalBlendedCost inherits WsfOrbitalOptimizationCost

:class:`WsfOrbitalBlendedCost` represents an orbital targeting optimization cost function that is a polynomial that blends together the elapsed time, :math:`\Delta t`, and the total change in speed, :math:`\Delta V`. The value of the cost function is set by three constants, :math:`A`, :math:`B`, and :math:`C` as follows:

:math:`g(\Delta t, \Delta V) = A \Delta t + B \Delta V + C \Delta t \Delta V`.

This cost function is more general than either least time, or least delta-V optimization, but it contains both of those as special cases.

Static Methods
**************

.. method:: static WsfOrbitalBlendedCost Construct(double aA_Value, double aB_Value, double aC_Value)

   Construct a new :class:`WsfOrbitalBlendedCost` instance with the function's coefficients set to **aA_Value**, **aB_Value**, and **aC_Value**.

.. method:: static WsfOrbitalBlendedCost ConstructLeastTime()

   Construct a new :class:`WsfOrbitalBlendedCost` instance with the coefficients set to reproduce least-time optimization (:math:`A = 1, B = C = 0`).

.. method:: static WsfOrbitalBlendedCost ConstructLeastDeltaV()

   Construct a new :class:`WsfOrbitalBlendedCost` instance with the coefficients set to reproduce least-delta V optimization (:math:`B = 1, A = C = 0`).

Methods
*******

.. method:: double A_Value()

   Return the value of the :math:`A` coefficient for this instance.

.. method:: double B_Value()

   Return the value of the :math:`B` coefficient for this instance.

.. method:: double C_Value()

   Return the value of the :math:`C` coefficient for this instance.

.. method:: void SetA_Value(double aA_Value)

   Set the :math:`A` coefficient for this instance to the provided **aA_Value**.

.. method:: void SetB_Value(double aB_Value)

   Set the :math:`B` coefficient for this instance to the provided **aB_Value**.

.. method:: void SetC_Value(double aC_Value)

   Set the :math:`C` coefficient for this instance to the provided **aC_Value**.
