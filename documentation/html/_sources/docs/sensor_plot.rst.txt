:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

sensor_plot
-----------

.. command:: sensor_plot
   :block:

Overview
========

sensor_plot is a WSF application that is used to evaluate sensor characteristics and interactions with user-specified geometries.  It has the ability to create files that produce plots of

* :command:`Sensor vertical coverage <sensor_plot.vertical_coverage>`
* :command:`Sensor vertical map <sensor_plot.vertical_map>`
* :command:`Sensor horizontal coverage <sensor_plot.horizontal_coverage>`
* :command:`Sensor horizontal map <sensor_plot.horizontal_map>`
* :command:`Sensor spherical coverage <sensor_plot.spherical_map>`
* :command:`Flight path analysis <sensor_plot.flight_path_analysis>`
* :command:`Clutter table <sensor_plot.clutter_table>`
* :command:`Defended area of a collection of sensors <sensor_plot.horizontal_map>`
* :command:`Antenna patterns <sensor_plot.antenna_plot>`

Command Line
============

Using the stand-alone sensor_plot.exe::

 sensor_plot file <sub>1</sub> [ file<sub>2</sub> ... file<sub>n</sub> ]

For other WSF applications supporting sensor_plot::

 wsf_application.exe --sensor_plot file <sub>1</sub> [ file<sub>2</sub> ... file<sub>n</sub> ]

Where the arguments are the names of files that contain:

* A sensor_plot input block that defines the function to be performed.
* Sensor and platform definitions required for the function to be performed.

Commands
========

.. command:: antenna_plot :command:`Antenna_Plot_Commands<antenna_plot>` end_antenna_plot

 Generates files 2D constant azimuth or elevation or 3D polar plot files.

 .. parsed-literal::

  antenna_plot
     ... :command:`Antenna Plot Commands<antenna_plot>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_antenna_plot

.. command:: clutter_table :command:`Clutter_Table_Commands<clutter_table>` end_clutter_table

 Generates a radar clutter table that is used in an WSF simulation.

 .. parsed-literal::

  clutter_table
     ... :command:`Clutter Table Commands<clutter_table>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_clutter_table

.. command:: flight_path_analysis :command:`Flight_Path_Analysis_Commands<flight_path_analysis>` end_flight_path_analysis

 Generates a plot of variables along a flight path.

 .. parsed-literal::

  flight_path_analysis
     ... :command:`Flight Path Analysis Commands<flight_path_analysis>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_flight_path_analysis

.. command:: horizontal_map :command:`Horizontal_Map_Commands<horizontal_map>` end_horizontal_map

 Generates a plot of variables over a matrix of down-range and cross-range values.

 .. parsed-literal::

  horizontal_map
     ... :command:`Horizontal Map Commands<horizontal_map>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_horizontal_map

.. command:: horizontal_coverage :command:`Horizontal_Coverage_Commands<horizontal_coverage>` end_horizontal_coverage

 Generates a 'horizontal coverage diagram' (or 'horizontal coverage envelope') plot file.

 .. parsed-literal::

  horizontal_coverage
     ... :command:`Horizontal Coverage Commands<horizontal_coverage>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_horizontal_coverage

.. command:: spherical_map :command:`Spherical_Map_Commands<spherical_map>`  end_spherical_map

 Generates a plot of variables at a specified range over a matrix of viewing angles.

 .. parsed-literal::

  spherical_map
     ... :command:`Spherical Map Commands<spherical_map>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_spherical_map

.. command:: vertical_map :command:`Vertical_Map_Commands<vertical_map>` end_vertical_map

 Generates a plot of variables over a matrix of altitude and ground_range values.

 .. parsed-literal::

  vertical_map
     ... :command:`Vertical Map Commands<vertical_map>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_vertical_map

.. command:: vertical_coverage :command:`Vertical_Coverage_Commands<vertical_coverage>` end_vertical_coverage

 Generates a 'vertical coverage diagram' (or 'vertical coverage envelope') plot file.

 .. parsed-literal::

  vertical_coverage
     ... :command:`Vertical Coverage Commands<vertical_coverage>` ...
     ... :ref:`sensor_plot.Stub_Definition_Commands` ...
  end_vertical_coverage

.. _sensor_plot.Stub_Definition_Commands:

Stub Definition Commands
========================

Existing scenarios are often used to create :command:`horizontal_map` plots.  These scenarios may include platform or platform subsystem type definitions that use capabilities that are not provided in the :command:`sensor_plot` executable (e.g., weapon models). In order to allow the scenario to be used without alteration, commands and dummy type definitions have been provided to simulate the availability of the unimplemented features.

The following commands provide mechanisms to ignore the specified global commands:

.. command:: ignore_block <word>

   Causes all data starting with the word **<word>** up to the word **end_<word>** to be ignored.

.. command:: ignore_line <word>

   Causes the word **<word>** and all subsequent words on the same line to be ignored.

.. command:: ignore_word <word>

   Causes the word **<word>** to be ignored.

The following dummy types are provided:

* **WSF_DUMMY_COMM** (a dummy :command:`comm` definition)
* **WSF_DUMMY_MOVER** (a dummy :command:`mover` definition)
* **WSF_DUMMY_PROCESSOR** (a dummy :command:`processor` definition)
* **WSF_DUMMY_SENSOR** (a dummy :command:`sensor` definition)
* **WSF_DUMMY_WEAPON** (a dummy :command:`weapon` definition)
* **WSF_DUMMY_WEAPON_EFFECTS** (a dummy :command:`weapon_effects` definition).
