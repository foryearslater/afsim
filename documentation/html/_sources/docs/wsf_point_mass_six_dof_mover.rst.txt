:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

WSF_POINT_MASS_SIX_DOF_MOVER
----------------------------

**Derives From:** :model:`WSF_SIX_DOF_MOVER`

**Script Class:** :class:`WsfPointMassSixDOF_Mover`

.. model:: mover WSF_POINT_MASS_SIX_DOF_MOVER

.. parsed-literal::

   mover <name> :model:`WSF_POINT_MASS_SIX_DOF_MOVER`

      // `PM6 Vehicle Type Commands`_
      vehicle_type_ ...

      ... :model:`WSF_SIX_DOF_MOVER` Commands ...

      // Script Methods -- see :class:`WsfPointMassSixDOF_Mover`

   end_mover

Overview
========

:model:`WSF_POINT_MASS_SIX_DOF_MOVER` is a specific type of :model:`WSF_SIX_DOF_MOVER`, using simple, first-order force coefficients for translation, and effects-based control to carry out rotation. 

In comparison to :model:`WSF_RIGID_BODY_SIX_DOF_MOVER`, :model:`WSF_POINT_MASS_SIX_DOF_MOVER` is less complicated to set up, requires less data, and is more numerically stable, but cannot reproduce the higher-order dynamics of a well-built :model:`WSF_RIGID_BODY_SIX_DOF_MOVER`.

Unlike a "full" 6DOF model, the point-mass model only uses a scalar mass property, and is unaware of mass distribution and the resulting moment-of-inertia tensor. Rotation capabilities are defined in table data, and are modified during execution to account for vehicle mass and flight conditions such as angle-of-attack, and air density. Rotation from thrust vectoring is also imparted according to table data, with the thrust force vector held static. 

   .. note:: 

      This limitation affects the construction of vertical-takeoff-and-landing vehicles. VTOL behavior can be approximated by including multiple engine instances in place of the same engine -- one in takeoff-and-landing configuration, and one in position for navigation -- and using script commands to ignite and shut-down the instances as appropriate.

:model:`WSF_POINT_MASS_SIX_DOF_MOVER` does not support aerodynamic damping effects for either forces or rotation. Parameters are available for approximating static stability, but are not required.

.. block:: WSF_POINT_MASS_SIX_DOF_MOVER

PM6 Vehicle Type Commands
=========================

The most important command for a WSF_POINT_MASS_SIX_DOF_MOVER is vehicle_type_, which defines the performance characteristics of of the object. The vehicle_type_ is defined as a :command:`point_mass_vehicle_type` in a :command:`six_dof_object_types` block. The vehicle_type_ must be defined before it is referenced in the **mover WSF_POINT_MASS_SIX_DOF_MOVER** block.

.. command:: vehicle_type <string>
   
   This defines the type of object used by the mover. The point-mass vehicle_type_ is defined in a :command:`six_dof_object_types` block and must be defined before being referenced.
   
   The simplest WSF_POINT_MASS_SIX_DOF_MOVER definition is something like this:
   
      mover WSF_POINT_MASS_SIX_DOF_MOVER
		
         vehicle_type  F-15C
			
      end_mover
    
   This indicates that the F-15C vehicle_type_ will be used. F-15C must be a :command:`point_mass_vehicle_type` -- :command:`rigid_body_vehicle_type` objects will not be accepted.

Script Methods
==============

To learn about the various script methods supported by WSF_POINT_MASS_SIX_DOF_MOVER, see :class:`WsfPointMassSixDOF_Mover`
