:orphan:

.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

.. _DisDetonation:

DisDetonation
-------------

.. class:: DisDetonation inherits DisPdu

.. parsed-literal::

   :method:`DisDetonation.FiringEntity`
   :method:`DisDetonation.TargetEntity`
   :method:`DisDetonation.WeaponEntity`
   :method:`DisDetonation.Event`
   :method:`DisDetonation.Velocity`
   :method:`DisDetonation.Location`
   :method:`DisDetonation.WeaponType`
   :method:`DisDetonation.Warhead`
   :method:`DisDetonation.Fuse`
   :method:`DisDetonation.Quantity`
   :method:`DisDetonation.Rate`
   :method:`DisDetonation.DetonationResult`
   :method:`DisDetonation.ImpactLocation`

Overview
========

DisDetonation_ is an implementation of the DIS detonation PDU.  Detonation PDUs are used to indicate that a
munition has detonated.

Methods
=======

.. method:: DisEntityId FiringEntity()
   
   Returns the ID of the platform that fired the munition.

.. method:: DisEntityId TargetEntity()
   
   Returns the ID of the platform that is fired upon.

.. method:: DisEntityId WeaponEntity()
   
   Returns the ID of the platform representing the munition.

.. method:: DisEventId Event()
   
   Returns the event ID.  The event ID on the detonation PDU should be the same as one on the :class:`DisFire`.

.. method:: Array<double> Velocity()
   
   Returns the velocity of the munition at the time of detonation.  The velocity is in meters per second with respect to
   earth centric coordinates.

.. method:: Array<double> Location()
   
   Returns the location of the munition at the time of detonation.  The location is in earth centered meters.

.. method:: DisEntityType WeaponType()
   
   Return the type of munition.

.. method:: int Warhead()
   
   Returns the warhead ID.

.. method:: int Fuse()
   
   Returns the fuse ID.

.. method:: int Quantity()
   
   Returns the quantity of munitions.

.. method:: int Rate()
   
   Returns the rate of detonation.

.. method:: int DetonationResult()
   
   Returns the predicted detonation result ID.

.. method:: Array<double> ImpactLocation()
   
   Returns the location of impact in the target's body coordinate system.
